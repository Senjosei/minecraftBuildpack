#!/usr/bin/env bash

mc_port=25566
port=${1:-${PORT:-8080}}

# Start the TCP tunnel
ngrok_cmd="screen -L -h 2048 -dmS proxy chisel server --port $PORT --proxy http://example.com"
echo "Starting chisel..."
eval "$ngrok_cmd &"
ngrok_pid=$!

# create server config
# echo "server-port=${mc_port}" >> /app/server.properties
# for f in whitelist banned-players banned-ips ops; do
#   test ! -f $f.json && echo -n "[]" > $f.json
# done

# Do an inline sync first, then start the background job
echo "Starting sync..."
bin/sync
eval "while true; do sleep ${AWS_SYNC_INTERVAL:-60}; bin/sync; done &"
sync_pid=$!

limit=$(ulimit -u)
case $limit in
  512)   # 2X Dyno
  heap="768m"
  ;;
  32768) # PX Dyno
  heap="4g"
  ;;
  *)     # 1X Dyno
  heap="384m"
  ;;
esac

echo "Starting: minecraft ${mc_port}"
eval "screen -L -h 2048 -dmS minecraft java -Xmx${heap} -Djline.terminal=jline.UnsupportedTerminal -Xms${heap} -jar forge.jar nogui"
main_pid=$!

# Flush the logfile every second, and ensure that the logfile exists
screen -X "logfile 1" && sleep 1

echo "Tailing log"
eval "tail -f screenlog.0 &"
tail_pid=$!

trap "kill $ngrok_pid $main_pid $sync_pid $tail_pid" SIGTERM
trap "kill -9 $ngrok_pid $main_pid $sync_pid $tail_pid; exit" SIGKILL

